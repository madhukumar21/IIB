
CREATE COMPUTE MODULE MF_Databade_log_Compute1

	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		 CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		--SET OutputRoot = InputRoot;
		DECLARE ref REFERENCE TO InputRoot.JSON.Data;
		
		DECLARE myblob2 BLOB;
		DECLARE mychar3 CHARACTER;
		
		SET myblob2 = ASBITSTREAM(ref CCSID InputRoot.Properties.CodedCharSetId);
		SET mychar3 = CAST(myblob2 AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId);
		
		call tab1(ApplicationLabel,MessageFlowLabel,mychar3,'channel_response',CURRENT_TIMESTAMP);
		
	
		
		SET OutputRoot.XMLNSC.Invoice=ref.Invoice;
		
		DECLARE ref2 REFERENCE TO OutputRoot.XMLNSC;
		
		DECLARE myblob3 BLOB;
		DECLARE mychar4 CHARACTER;
		SET myblob3 = ASBITSTREAM(ref2);
		SET mychar4 = CAST(myblob3 AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId ENCODING InputRoot.Properties.Encoding);
		
		call tab1(ApplicationLabel,MessageFlowLabel,mychar4,'host_response',CURRENT_TIMESTAMP);
		
		
		
	END;
END MODULE;

CREATE PROCEDURE  tab1(IN APP CHARACTER, IN MSGFLOW CHARACTER, IN MESSAGE CHARACTER, IN LOGINTYPE CHARACTER, IN LOGINTIME TIMESTAMP )
LANGUAGE DATABASE
EXTERNAL NAME M_DBLOGIN1;

