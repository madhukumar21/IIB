DECLARE exvar EXTERNAL CHARACTER 'C:\inLog\Log4jConfigurationFile.xml';
DECLARE var BOOLEAN;
CREATE COMPUTE MODULE MF_LOG4J_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		 CALL CopyEntireMessage();
		 CALL initLog4j(exvar) INTO var;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		
		DECLARE input_request,output_response CHARACTER;
		SET OutputRoot.JSON.Data.Root = InputRoot.XMLNSC.Root;
		SET input_request = CAST(ASBITSTREAM(InputRoot.XMLNSC)AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId);
		SET output_response = CAST(ASBITSTREAM(OutputRoot.JSON)AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId);
		CALL writeToLogFile(MessageFlowLabel, 'MyLogger','INFO','madhu'|| input_request) INTO var;
		CALL writeToLogFile(MessageFlowLabel, 'MyLogger','INFO','madhu'|| output_response) INTO var;
		
	END;
END MODULE;

CREATE FUNCTION writeToLogFile( IN COMPONENT_NAME CHARACTER,IN LOGGER_NAME CHARACTER, IN LEVEL CHARACTER, IN TEXT CHARACTER )
RETURNS BOOLEAN
LANGUAGE JAVA
EXTERNAL NAME "com.ibm.broker.IAM3.Log4jNode.log";

CREATE FUNCTION initLog4j( IN CONFIG_FILE_NAME CHARACTER )
RETURNS BOOLEAN
LANGUAGE JAVA
EXTERNAL NAME "com.ibm.broker.IAM3.Log4jNode.initLog4j";